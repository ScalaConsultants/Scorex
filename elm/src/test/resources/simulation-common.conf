simulation {
  # how many nodes to run
  network-size = 4

  # the random seed for generating transactions, if 0 use current timestamp
  # due to the undeterministic nature of the network, only first few transactions may follow the expected patterns
  random-seed = 0

  # whether to shutdown nodes after simulation
  # set to false to make additional transactions and inspections after the simulation finished
  shutdown-nodes = true

  transactions {
    # number of transactions to generate
    count = 50

    # delay between transactions attempts
    interval = 200 ms

    # a transaction cannot make a node balance drop below these funds (saving coinage)
    min-funds = 1000

    # minimum amount as percentage of current funds
    min-amount = 0.05

    # maximum amount as percentage of current funds
    max-amount = 0.3

    # minimum absolute fee
    min-fee = 1

    # maximum absolute fee
    max-fee = 10
  }

  http {
    # http request timeout
    timeout = 10s
  }

  # awaiting block synchronization after simulation completes
  synchronization {
    # interval between synchronization checks
    interval = 5s

    # number of synchronization checks
    attempts = 20
  }
}


elm {
  node.shutdown-hook = false

  forgin.delay = 1s

  consensus {
    N = 8
    confirmation-depth = 1
    base-target = 100
  }
}
